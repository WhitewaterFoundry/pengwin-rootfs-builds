jobs:
- job: ${{ parameters.arch }}
  pool:
    vmImage: ubuntu-latest
  variables:
    PREBOOTSTRAP_ARCH: ${{ parameters.arch }}
    PREBOOTSTRAP_QEMU_ARCH: ${{ parameters.qemu_arch }}
    PREBOOTSTRAP_RELEASE: testing
  steps:
  - script: sudo apt-get install -y curl gnupg debootstrap qemu-user-static
    displayName: 'Installing build dependencies'

  - script: mkdir rootfs
    displayName: 'Creating rootfs folder'

  - script: sudo debootstrap --foreign --verbose --arch=$(PREBOOTSTRAP_ARCH) --include=sudo,locales,git,ssh,gnupg,apt-transport-https,wget,ca-certificates,less,curl,bash-completion,vim $(PREBOOTSTRAP_RELEASE) ./rootfs/ http://deb.debian.org/debian 
    displayName: 'Using debootstrap to create rootfs'
  
  - script: |
      cd rootfs;
      sudo mount --bind /dev dev/
      sudo mount --bind /sys sys/
      sudo mount --bind /proc proc/
      sudo mount --bind /dev/pts dev/pts/
      cd ..;
    displayName: 'Entering chroot to mount dev, sys, proc and dev/pts'
   
  - script: sudo cp /usr/bin/qemu-$(PREBOOTSTRAP_QEMU_ARCH)-static rootfs/usr/bin/;
    displayName: Copy static QEMU to rootfs
  
  - script: sudo chmod +x rootfs/usr/bin/qemu-$(PREBOOTSTRAP_QEMU_ARCH)-static
    displayName: Marking static [rootfs/usr/bin/qemu-$(PREBOOTSTRAP_QEMU_ARCH)-static] as executable
  
  - script: sudo chroot rootfs /debootstrap/debootstrap --second-stage --verbose
    displayName: Manually setting up debootstrap
  
  - script: curl "https://salsa.debian.org/rhaist-guest/WSL/raw/master/linux_files/profile" -so rootfs/etc/profile
    displayName: 'Installing default` profile'
  
  - script: curl "https://raw.githubusercontent.com/WhitewaterFoundry/Pengwin/master/linux_files/setup" -so rootfs/etc/setup
    displayName: 'Installing Pengwin bootstrap script'
  
  - script: chroot rootfs/ /bin/bash -c "bash /etc/setup --silent --install"
    displayName: 'Running Pengwin bootstrap script'
  
  - script: |
      chroot rootfs/ /bin/bash -c "echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen && locale-gen"
      chroot rootfs/ /bin/bash -c "update-locale LANGUAGE=en_US.UTF-8 LC_ALL=C"
    displayName: 'Configuring language settings'
  
  - script: |
      chroot rootfs/ /bin/bash -c "echo 'Defaults lecture_file = /etc/sudoers.lecture' >> /etc/sudoers"
      chroot rootfs/ /bin/bash -c "echo 'Enter your UNIX password below. This is not your Windows password.' > /etc/sudoers.lecture"
    displayName: 'Configuring sudo message'
  
  - script: |
      chroot rootfs/ apt-get -y -q remove systemd dmidecode --allow-remove-essential
      chroot rootfs/ apt-get -y -q autoremove
      chroot rootfs/ apt-get -y -q clean
    displayName: 'Clean up apt cache'
  
  - script: sudo rm rootfs/usr/bin/qemu-$(PREBOOTSTRAP_QEMU_ARCH)-static
    displayName: Deleting QEMU from chroot
    
  - script: cd rootfs && sudo tar -zcvf $(Build.ArtifactStagingDirectory)/prebootstrap_$(PREBOOTSTRAP_RELEASE)_$(PREBOOTSTRAP_VARIANT)_$(PREBOOTSTRAP_ARCH)_rootfs.tar.gz *
    displayName: 'Compressing rootfs for $(PREBOOTSTRAP_RELEASE) $(PREBOOTSTRAP_VARIANT) $(PREBOOTSTRAP_ARCH)'

  - task: PublishBuildArtifacts@1
  
